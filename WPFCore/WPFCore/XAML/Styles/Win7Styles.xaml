<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="Label" x:Key="HighlightLabel">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Calibri"/>
    </Style>

    <!-- Standardfarbe für Broder.BorderBrush ============================= -->
    <Color x:Key="BorderColor">#DFE9F5</Color>
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
    
    <!-- Definition einer Button-Leiste als Menü ========================== -->
    <LinearGradientBrush x:Key="MenuBackground"
                         StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FDFEFF"/>
        <GradientStop Offset="0.5" Color="#E6F0FA"/>
        <GradientStop Offset="0.5" Color="#DCE6F4"/>
        <GradientStop Offset="1" Color="#DFE9F5"/>
    </LinearGradientBrush>

    <Style TargetType="Border" x:Key="MenuBorder">
        <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <!--<Setter Property="CornerRadius" Value="3,3,0,0"/>-->
    </Style>

    <LinearGradientBrush x:Key="ChromeBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF3F3F3" Offset="0"/>
            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
            <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
            <GradientStop Color="#FFCDCDCD" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <!-- ListBoxItem ================================================== -->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="AlternateListBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Border" 
                                BorderThickness="1" CornerRadius="3"
                                SnapsToDevicePixels="True">
                        <Border Name="InnerBorder" 
                                    BorderThickness="1" CornerRadius="2"
                                    SnapsToDevicePixels="True"
                                    Padding="1">
                            <ContentPresenter />
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource HoverBorderBrush_Outer}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" 
                                        Value="{StaticResource HoverBorderBrush_Inner}"/>
                            <Setter TargetName="InnerBorder" Property="Background" 
                                        Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="InnerBorder" Property="Background" 
                                        Value="{StaticResource SelectedBackgroundBrush}"/>
                            <Setter TargetName="InnerBorder" Property="TextBlock.Foreground" 
                                        Value="{StaticResource SelectedForegroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{StaticResource SelectedBorderBrush_Outer}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" 
                                        Value="{StaticResource SelectedBorderBrush_Inner}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button ======================================================= -->
    <Style TargetType="Button" x:Key="MenuButton">
        <Style.Resources>
            <SolidColorBrush x:Key="HighlightOuterBorder" Color="#FFBBCADB"/>
            <SolidColorBrush x:Key="HighlightInnerBorder" Color="#FFFDFEFF"/>
            <SolidColorBrush x:Key="HighlightBackground" Color="#20FFFFFF"/>

            <SolidColorBrush x:Key="PressedOuterBorder" Color="#FFBBCADB"/>
            <SolidColorBrush x:Key="PressedInnerBorder" Color="#20000000"/>
            <SolidColorBrush x:Key="PressedBackground" Color="#20E0E0E0"/>
        </Style.Resources>

        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Padding" Value="10,0"/>

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="OuterBorder"
                                BorderThickness="1" SnapsToDevicePixels="True"
                                CornerRadius="3">
                        <Border x:Name="InnerBorder"
                                Background="Transparent"
                                BorderThickness="1" SnapsToDevicePixels="True"
                                CornerRadius="2">
                            <ContentPresenter RecognizesAccessKey="True" 
                                              Content="{TemplateBinding ContentControl.Content}" 
                                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                              Margin="{TemplateBinding Control.Padding}" 
                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource HighlightOuterBorder}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource HighlightInnerBorder}"/>
                            <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource HighlightBackground}"/>
                        </Trigger>

                        <Trigger Property="ButtonBase.IsFocused" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource HighlightOuterBorder}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource HighlightInnerBorder}"/>
                            <!--<Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource HighlightBackground}"/>-->
                        </Trigger>

                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource PressedOuterBorder}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource PressedInnerBorder}"/>
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="0,1,0,0"/>
                            <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource PressedBackground}"/>
                            <Setter TargetName="InnerBorder" Property="Padding" Value="1,1,0,0"/>
                        </Trigger>

                        <Trigger Property="ButtonBase.IsEnabled" Value="False">
                            <Setter TargetName="InnerBorder" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button ======================================================= -->
    <Style TargetType="ToggleButton" x:Key="MenuToggleButton">
        <Style.Resources>
            <SolidColorBrush x:Key="HighlightOuterBorder" Color="#FFBBCADB"/>
            <SolidColorBrush x:Key="HighlightInnerBorder" Color="#FFFDFEFF"/>
            <SolidColorBrush x:Key="HighlightBackground" Color="#20FFFFFF"/>

            <SolidColorBrush x:Key="PressedOuterBorder" Color="#FFBBCADB"/>
            <SolidColorBrush x:Key="PressedInnerBorder" Color="#20000000"/>
            <SolidColorBrush x:Key="PressedBackground" Color="#20E0E0E0"/>
        </Style.Resources>

        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Padding" Value="10,0"/>

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="OuterBorder"
                            BorderBrush="{StaticResource HighlightOuterBorder}"
                                BorderThickness="1" SnapsToDevicePixels="True"
                                CornerRadius="3">
                        <Border x:Name="InnerBorder"
                                Background="Transparent"
                                BorderThickness="1" SnapsToDevicePixels="True"
                                CornerRadius="2">
                            <ContentPresenter RecognizesAccessKey="True" 
                                              Content="{TemplateBinding ContentControl.Content}" 
                                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                              Margin="{TemplateBinding Control.Padding}" 
                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource HighlightOuterBorder}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource HighlightInnerBorder}"/>
                            <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource HighlightBackground}"/>
                        </Trigger>

                        <Trigger Property="ButtonBase.IsFocused" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource HighlightOuterBorder}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource HighlightInnerBorder}"/>
                            <!--<Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource HighlightBackground}"/>-->
                        </Trigger>

                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource PressedOuterBorder}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource PressedInnerBorder}"/>
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="0,1,0,0"/>
                            <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource PressedBackground}"/>
                            <Setter TargetName="InnerBorder" Property="Padding" Value="1,1,0,0"/>
                        </Trigger>

                        <Trigger Property="ButtonBase.IsEnabled" Value="False">
                            <Setter TargetName="InnerBorder" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>